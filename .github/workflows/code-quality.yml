name: Code Quality

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  schedule:
    - cron: '0 6 * * 1'  # Run every Monday at 6 AM UTC

jobs:
  codeql:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp', 'javascript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: ${{ matrix.language }}

    - name: Setup .NET (for C# analysis)
      if: matrix.language == 'csharp'
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Build .NET solution (for C# analysis)
      if: matrix.language == 'csharp'
      run: |
        dotnet restore Calculator.sln
        dotnet build Calculator.sln --no-restore

    - name: Setup Node.js (for JavaScript analysis)
      if: matrix.language == 'javascript'
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Build Angular app (for JavaScript analysis)
      if: matrix.language == 'javascript'
      run: |
        cd Calculator.Web
        npm ci
        npm run build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:${{matrix.language}}"

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Install SonarCloud scanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet-sonarscanner begin /k:"Calculator-Docker" /o:"your-org" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet restore Calculator.sln
        dotnet build Calculator.sln --no-restore
        dotnet test Calculator.Tests/Calculator.Tests.csproj --no-build --collect:"XPlat Code Coverage"
        dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  docker-lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Lint Calculator.Server Dockerfile
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Calculator.Server/Dockerfile
        
    - name: Lint Calculator.Client Dockerfile
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Calculator.Client/Dockerfile
        
    - name: Lint Calculator.Web Dockerfile
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Calculator.Web/Dockerfile