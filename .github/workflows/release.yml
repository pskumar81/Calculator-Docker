name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: 'v1.0.0'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    name: Create Release Build
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set release version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          echo "version=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
        else
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        fi
        
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build and push Calculator Server
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Calculator.Server/Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-calculator-server:${{ steps.version.outputs.version }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-calculator-server:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push Calculator Web
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Calculator.Web/Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-calculator-web:${{ steps.version.outputs.version }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-calculator-web:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push Calculator Client
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Calculator.Client/Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-calculator-client:${{ steps.version.outputs.version }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-calculator-client:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Create deployment manifest
      run: |
        mkdir -p release
        cat > release/docker-compose-release.yml << EOF
        version: '3.8'
        services:
          calculator-server:
            image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-calculator-server:${{ steps.version.outputs.version }}
            ports:
              - "5001:5001"
            environment:
              - ASPNETCORE_ENVIRONMENT=Production
              - ASPNETCORE_URLS=http://+:5001
            networks:
              - calculator-network

          calculator-web:
            image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-calculator-web:${{ steps.version.outputs.version }}
            ports:
              - "4200:80"
            depends_on:
              - calculator-server
            networks:
              - calculator-network

          calculator-client:
            image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-calculator-client:${{ steps.version.outputs.version }}
            depends_on:
              - calculator-server
            environment:
              - SERVER_URL=http://calculator-server:5001
            networks:
              - calculator-network

        networks:
          calculator-network:
        EOF
        
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-${{ steps.version.outputs.version }}
        path: release/
        
    - name: Release Summary
      run: |
        echo "## ðŸš€ Release ${{ steps.version.outputs.version }} Created!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Docker Images Published:" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-calculator-server:${{ steps.version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-calculator-web:${{ steps.version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-calculator-client:${{ steps.version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### To Deploy:" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker-compose -f docker-compose-release.yml up -d" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY